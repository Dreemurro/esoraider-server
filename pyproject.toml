[tool.poetry]
name = "esoraider-server"
version = "0.1.0"
description = ""
authors = ["Dreemurro <dr33murro@gmail.com>"]
readme = "README.MD"
packages = [{ include = "esoraider_server" }]
package-mode = false

[tool.poetry.dependencies]
python = "~3.12"
aioauth-client = "0.29.0" 
gql = { extras = ["aiohttp"], version = "3.5.0" }
granian = "1.7.1"
litestar = { extras = ["standard"], version = "2.13.0" }
msgspec = "0.18.6"
portion = "2.3.1"
python-dotenv = "0.21.1"
structlog = "24.4.0"

[tool.poetry.group.dev.dependencies]
autopep8 = "*"
isort = "*"
mypy = "*"
ruff = "*"
wemake-python-styleguide = "*"
# For debugging
granian = {extras = ["reload"], version = "1.7.1"}

[tool.poetry.group.tests.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"

[tool.ruff]
# Source - https://github.com/wemake-services/wemake-python-styleguide/blob/master/pyproject.toml
target-version = "py312"
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = false

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # maccabe
    "COM",  # flake8-commas
    "D",    # pydocstyle
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle
    "ERA",  # flake8-eradicate
    "EXE",  # flake8-executable
    "F",    # pyflakes
    "FBT",  # flake8-boolean-trap
    "FLY",  # pyflint
    "FURB", # refurb
    "G",    # flake8-logging-format
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "ISC",  # flake8-implicit-str-concat
    "LOG",  # flake8-logging
    "N",    # pep8-naming
    "PERF", # perflint
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # ruff
    "S",    # flake8-bandit
    "SIM",  # flake8-simpify
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "T100", # flake8-debugger
    "TRY",  # tryceratops
    "UP",   # pyupgrade
    "W",    # pycodestyle
    "YTT",  # flake8-2020
]
ignore = [
    "A005",   # allow to shadow stdlib and builtin module names
    "COM812", # trailing comma, conflicts with `ruff format`
    # Different doc rules that we don't really care about:
    "D100",
    "D104",
    "D106",
    "D203",
    "D212",
    "D401",
    "D404",
    "D405",
    "ISC001",  # implicit string concat conflicts with `ruff format`
    "ISC003",  # prefer explicit string concat over implicit concat
    "PLR09",   # we have our own complexity rules
    "PLR2004", # do not report magic numbers
    "PLR6301", # do not require classmethod / staticmethod when self not used
    "TRY003",  # long exception messages from `tryceratops`
]
external = ["WPS"]
flake8-import-conventions.banned-from = ["ast"]
flake8-quotes.inline-quotes = "single"
mccabe.max-complexity = 6
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S101", # asserts
]

[tool.isort]
include_trailing_comma = true
multi_line_output = 3
line_length = 80
use_parentheses = true

[tool.pytest.ini_options]
addopts = "-v -rP --cov=esoraider_server"
asyncio_default_fixture_loop_scope = "session"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
