name: Build the container & deploy it to Swarm

on: [workflow_dispatch, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/blacksheep/Dockerfile
          build-args: |
            CURRENT_ENV=production
          target: production_build
          push: true
          tags: |
            ghcr.io/dreemurro/esoraider-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Make .env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          envkey_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          envkey_DEBUG: ${{ secrets.DEBUG }}
          envkey_SHOW_ERROR_DETAILS: ${{ secrets.SHOW_ERROR_DETAILS }}
          envkey_DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          envkey_TLS_EMAIL: ${{ secrets.TLS_EMAIL }}
          directory: esoraider_server
          fail_on_empty: true
      # Workaround for docker swarm "issues"
      # https://github.com/docker/cli/issues/1582
      # https://github.com/docker/cli/issues/2527
      # https://github.com/docker/compose/issues/9133
      # https://github.com/saveourtool/save-cloud/issues/1158
      - name: Generate merged docker-compose
        # Has to be docker-compose aka v1
        run: docker-compose -f docker-compose.yml -f docker/docker-compose.prod.yml config > docker-compose.full.yml
      - name: Register SSH keys
        run: |
          mkdir -p ~/.ssh
          ls ~/.ssh
          printf '%s\n' "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          printf '%s\n' "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
          eval $(ssh-agent)
          ssh-add ~/.ssh/id_rsa
      - name: Add known hosts
        run: |
          ssh-keyscan -p ${{ secrets.PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Create & use Docker context
        run: |
          docker context create remote --docker "host=ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.PORT }}"
          docker context use remote
      - name: Deploy to Docker swarm
        run: docker --log-level debug --host ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.PORT }} stack deploy -c docker-compose.full.yml esoraider-server
